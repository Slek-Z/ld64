/*
x64 Length Disassembler
Copyright (C) 2020 Slek

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef __LD64ASM_H__
#define __LD64ASM_H__

#include <cstdint>

/* length_disasm_asm */
int length_disasm_asm(const void *opcode0) {
  uint64_t length;
  asm (
    "push %%rax;"
    "push %%rsi;"
    "movq %1,%%rsi;"
".byte 0xE9, 0xE3, 0x00, 0x00, 0x00, 0x90, 0x90, 0x90, 0x00, 0x00, 0x00, 0x00;"
".byte 0x40, 0x40, 0x40, 0x40, 0xFF, 0xFF, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00;"
".byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00;"
".byte 0x00, 0x00, 0x0D, 0x00, 0x3F, 0xBF, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F;"
".byte 0x00, 0x00, 0xFF, 0xFF, 0x08, 0xFF, 0xFF, 0xFF, 0xFB, 0xFF, 0xFF, 0xFB;"
".byte 0xFF, 0xFF, 0xFF, 0xFF, 0xCF, 0xBF, 0x8F, 0xFF, 0xFF, 0xFB, 0xE0, 0xFF;"
".byte 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00;"
".byte 0x08, 0x0A, 0x00, 0x00, 0xFB, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00;"
".byte 0xC3, 0x00, 0x0F, 0xFF, 0x00, 0x00, 0xC0, 0xC0, 0x0F, 0x0F, 0x0F, 0x0F;"
".byte 0x0F, 0x0F, 0x0F, 0x0F, 0x00, 0x00, 0xFF, 0xFF, 0x08, 0xF0, 0x00, 0x00;"
".byte 0xF0, 0xFF, 0xFF, 0xFB, 0xF0, 0xFC, 0x00, 0x00, 0x08, 0x9A, 0x8F, 0xFF;"
".byte 0x00, 0xF0, 0x20, 0xFF, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10;"
".byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0xFF, 0xFF, 0x09, 0x00, 0x00, 0x00;"
".byte 0x00, 0x01, 0xFF, 0x00, 0x43, 0x20, 0x00, 0x00, 0xFF, 0x08, 0x00, 0x00;"
".byte 0xA0, 0x28, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00;"
".byte 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0xFB, 0xFF, 0xFC;"
".byte 0x83, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x80;"
".byte 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00;"
".byte 0x00, 0x00, 0xFF, 0xFF, 0x38, 0xF8, 0xFF, 0xFC, 0x83, 0x00, 0x00, 0x00;"
".byte 0x00, 0x00, 0x00, 0x00, 0x51, 0x52, 0x53, 0x55, 0x41, 0x50, 0x41, 0x51;"
".byte 0x41, 0x52, 0x41, 0x53, 0x41, 0x54, 0x48, 0x8D, 0x2D, 0x0B, 0xFF, 0xFF;"
".byte 0xFF, 0x31, 0xC0, 0x45, 0x31, 0xC0, 0x45, 0x31, 0xC9, 0x66, 0x41, 0xBA;"
".byte 0x04, 0x00, 0x66, 0x41, 0xBB, 0x08, 0x00, 0x45, 0x31, 0xE4, 0x56, 0xAC;"
".byte 0x89, 0xC3, 0xC0, 0xEB, 0x06, 0x88, 0xC1, 0x83, 0xE1, 0x3F, 0x48, 0x8B;"
".byte 0x54, 0xDD, 0x00, 0x48, 0x0F, 0xA3, 0xCA, 0x73, 0x29, 0x88, 0xC2, 0x80;"
".byte 0xE2, 0xF8, 0x80, 0xFA, 0x48, 0x41, 0x0F, 0x94, 0xC1, 0x75, 0x05, 0x41;"
".byte 0xB2, 0x04, 0xEB, 0xD7, 0x66, 0xBA, 0x02, 0x00, 0x3C, 0x66, 0x66, 0x44;"
".byte 0x0F, 0x44, 0xD2, 0xD0, 0xE2, 0x3C, 0x67, 0x66, 0x44, 0x0F, 0x44, 0xDA;"
".byte 0xEB, 0xC1, 0x3C, 0x0F, 0x0F, 0x84, 0xF2, 0x00, 0x00, 0x00, 0x48, 0x8B;"
".byte 0x54, 0xDD, 0x20, 0x48, 0x0F, 0xA3, 0xCA, 0x0F, 0x83, 0x33, 0x01, 0x00;"
".byte 0x00, 0x48, 0x8B, 0x54, 0xDD, 0x40, 0x48, 0x0F, 0xA3, 0xCA, 0x41, 0x0F;"
".byte 0x92, 0xC0, 0x88, 0xC2, 0x80, 0xE2, 0xFE, 0x80, 0xFA, 0xF6, 0x75, 0x23;"
".byte 0x8A, 0x16, 0x80, 0xE2, 0x30, 0x0F, 0x85, 0x18, 0x01, 0x00, 0x00, 0x31;"
".byte 0xD2, 0xFE, 0xC2, 0x66, 0x0F, 0xBA, 0xE0, 0x00, 0x66, 0x45, 0x0F, 0x42;"
".byte 0xE2, 0x66, 0x44, 0x0F, 0x43, 0xE2, 0xE9, 0x00, 0x01, 0x00, 0x00, 0x48;"
".byte 0x8B, 0x54, 0xDD, 0x60, 0x48, 0x0F, 0xA3, 0xCA, 0x0F, 0x82, 0xF1, 0x00;"
".byte 0x00, 0x00, 0x48, 0x8B, 0x94, 0xDD, 0x80, 0x00, 0x00, 0x00, 0x48, 0x0F;"
".byte 0xA3, 0xCA, 0x73, 0x08, 0x41, 0xFE, 0xC4, 0xE9, 0xDB, 0x00, 0x00, 0x00;"
".byte 0x45, 0x84, 0xC9, 0x74, 0x12, 0x88, 0xC2, 0x80, 0xE2, 0xF8, 0x80, 0xFA;"
".byte 0xB8, 0x75, 0x08, 0x41, 0xB4, 0x08, 0xE9, 0xC4, 0x00, 0x00, 0x00, 0x88;"
".byte 0xC2, 0x80, 0xE2, 0xC7, 0x80, 0xFA, 0x05, 0x74, 0x20, 0x88, 0xC2, 0x80;"
".byte 0xE2, 0xF8, 0x80, 0xFA, 0xB8, 0x74, 0x16, 0x88, 0xC2, 0x80, 0xE2, 0xFE;"
".byte 0x80, 0xFA, 0x68, 0x74, 0x0C, 0x3C, 0x81, 0x74, 0x08, 0x3C, 0xA9, 0x74;"
".byte 0x04, 0x3C, 0xC7, 0x75, 0x08, 0x45, 0x88, 0xD4, 0xE9, 0x92, 0x00, 0x00;"
".byte 0x00, 0x88, 0xC2, 0x80, 0xE2, 0xFC, 0x80, 0xFA, 0xA0, 0x75, 0x08, 0x45;"
".byte 0x88, 0xDC, 0xE9, 0x80, 0x00, 0x00, 0x00, 0x88, 0xC2, 0x80, 0xE2, 0xFE;"
".byte 0x80, 0xFA, 0xE8, 0x75, 0x05, 0x41, 0xB4, 0x04, 0xEB, 0x71, 0x88, 0xC2;"
".byte 0x80, 0xE2, 0xF7, 0x80, 0xFA, 0xC2, 0x75, 0x05, 0x41, 0xB4, 0x02, 0xEB;"
".byte 0x62, 0xB1, 0x03, 0x3C, 0xC8, 0x66, 0x44, 0x0F, 0x44, 0xE1, 0xEB, 0x57;"
".byte 0xAC, 0x89, 0xC3, 0xC0, 0xEB, 0x06, 0x88, 0xC1, 0x83, 0xE1, 0x3F, 0x48;"
".byte 0x8B, 0x94, 0xDD, 0xA0, 0x00, 0x00, 0x00, 0x48, 0x0F, 0xA3, 0xCA, 0x73;"
".byte 0x37, 0x48, 0x8B, 0x94, 0xDD, 0xC0, 0x00, 0x00, 0x00, 0x48, 0x0F, 0xA3;"
".byte 0xCA, 0x41, 0x0F, 0x92, 0xC0, 0x88, 0xC2, 0x80, 0xE2, 0xF0, 0x80, 0xFA;"
".byte 0x80, 0x75, 0x05, 0x41, 0xB4, 0x04, 0xEB, 0x1F, 0xB1, 0x01, 0x88, 0xC2;"
".byte 0x80, 0xE2, 0xF7, 0x80, 0xFA, 0xA4, 0x66, 0x44, 0x0F, 0x44, 0xE1, 0x3C;"
".byte 0xBA, 0x66, 0x44, 0x0F, 0x44, 0xE1, 0xEB, 0x07, 0x5E, 0x31, 0xC0, 0xFF;"
".byte 0xC8, 0xEB, 0x44, 0x45, 0x84, 0xC0, 0x74, 0x37, 0xAC, 0x88, 0xC1, 0x80;"
".byte 0xE1, 0xC0, 0x80, 0xF9, 0xC0, 0x74, 0x2C, 0x80, 0xF9, 0x40, 0x75, 0x05;"
".byte 0x41, 0xFE, 0xC4, 0xEB, 0x09, 0x80, 0xF9, 0x80, 0x75, 0x04, 0x41, 0x80;"
".byte 0xC4, 0x04, 0x24, 0x07, 0x3C, 0x04, 0x75, 0x03, 0xAC, 0x24, 0x07, 0x84;"
".byte 0xC9, 0x75, 0x0C, 0x41, 0x8D, 0x4C, 0x24, 0x04, 0x3C, 0x05, 0x66, 0x44;"
".byte 0x0F, 0x44, 0xE1, 0x4A, 0x8D, 0x04, 0x26, 0x5E, 0x48, 0x29, 0xF0, 0x41;"
".byte 0x5C, 0x41, 0x5B, 0x41, 0x5A, 0x41, 0x59, 0x41, 0x58, 0x5D, 0x5B, 0x5A;"
".byte 0x59;"
    "movq %%rax,%0;"
    "pop %%rsi;"
    "pop %%rax"
      :"=r"(length)   /* output */
      :"r"(opcode0)   /* input */
      :"%rax","%rsi"  /* clobbered register */
  );
  return length;
}

#endif // __LD64ASM_H__
